name: Python CI
on:
  push:
  pull_request:

permissions:
  contents: write
  issues: write

jobs:
  py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov pre-commit

      - name: Pre-commit (auto-fix)
        uses: pre-commit/action@v3.0.1

      - name: Auto-commit pre-commit fixes
        run: |
          if ! git diff --quiet; then
            git config user.name  "seventh-horizon-bot"
            git config user.email "bot@seventh-horizon.io"
            git add -A
            git commit -m "ci: auto-apply pre-commit fixes"
            git push || true
          fi

      - name: Tests
        run: pytest -q

      - name: Upload coverage + reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: repro-artifacts
          path: |
            coverage.xml
            .pytest_cache/**
          if-no-files-found: ignore

      - name: Summarize failure with next steps
        if: failure()
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GH_TOKEN: ${{ github.token }}
        run: |
          python - <<'PY'
import os, json, urllib.request
prompt = "Python CI failed. In <=120 words, say likely cause + exact pytest/ruff/black commands to reproduce locally."
req=urllib.request.Request("https://api.openai.com/v1/chat/completions",
  headers={"Authorization":"Bearer "+os.environ["OPENAI_API_KEY"],"Content-Type":"application/json"})
body={"model":"gpt-4o-mini","messages":[{"role":"user","content":prompt}],"max_tokens":200}
resp=json.loads(urllib.request.urlopen(req,data=json.dumps(body).encode()).read())
open("_analysis.md","w").write(resp["choices"][0]["message"]["content"])
PY
          gh issue create --title "Python CI failed on ${{ github.ref_name }}" --body "$(cat _analysis.md)" --label "ci-fail" || true
